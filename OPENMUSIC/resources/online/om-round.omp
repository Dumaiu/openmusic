;fileheader
; (5.11 :patc (om-make-point 95 97) (om-make-point 1 44) (om-make-point 529 502) "non documentation" 183)
;endfileheader
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "om-round" '((om-load-boxcomment "comment" (om-make-point 174 106) '"INPUT:$self   number or list$OPTIONAL INPUTS:$decimals  number$divisor       number$OUTPUT:$returns <self> with decimal <decimal> places$" "" (om-make-point 171 26) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 181 44) '"will return$? OM->(2.26667 7.77778 -154.37623)" "" (om-make-point 280 373) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 140 40) '"will return$? OM->(0.34 1.167 -23.156)" "" (om-make-point 143 373) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 85 39) '"will return$? OM->(0 1 -23)" "" (om-make-point 25 370) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcall 'bastype "aux2" 't 'nil (om-make-point 357 278) (om-make-point 40 25) 0.15 "0.15" nil) (om-load-boxcall 'genfun "OM-ROUND" 'om-round '((om-load-inputfun 'input-funbox "number or tree" "SELF" 1) (om-load-inputfun 'input-funbox "number of decimals" "DECIMALS" 3) (om-load-inputfun 'input-funbox "divisor" "DIVISOR" 1)) (om-make-point 315 312) nil nil nil nil 1) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 337 278) (om-make-point 12 22) 5 "5" nil) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 207 283) (om-make-point 12 22) 3 "3" nil) (om-load-boxcall 'genfun "OM-ROUND" 'om-round '((om-load-inputfun 'input-funbox "number or tree" "SELF" 1) (om-load-inputfun 'input-funbox "number of decimals" "DECIMALS" 3)) (om-make-point 177 316) nil nil nil nil 1) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 123 203) (om-make-point 146 26) (list 0.34 7/6 -23.156435) "(0.34 7/6 -23.156435)" nil) (om-load-boxcall 'genfun "OM-ROUND" 'om-round '((om-load-inputfun 'input-funbox "number or tree" "SELF" 1)) (om-make-point 38 311) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 412 59) '"Rounds a number or tree. The optional input <decimals> sets the choice of number of decimal places to round to.<divisor> specifies division of this rounded number by a second before rounding." "" (om-make-point 48 137) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 156 30) '"om-round" "" (om-make-point 180 5) nil (om-make-color 0 0 0) (om-make-font "Arial" 14 :family nil :style '(:bold) :mode '(:srcor)))) '((9 0 5 0 nil 0) (6 0 5 1 nil 0) (4 0 5 2 nil 0) (9 0 8 0 nil 0) (7 0 8 1 nil 0) (9 0 10 0 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name 'kernel-om3))) (setf (thepict newpict) (om-get-picture 'kernel-om3)) (setf (name newpict) 'kernel-om3) (setf (pict-pos newpict) (om-make-point 3 33)) (setf (pict-size newpict) (om-make-point 98 83)) newpict)) 5.11))






































































































































































































































