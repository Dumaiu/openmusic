;fileheader
; (5.11 :patc (om-make-point 223 15) (om-make-point 5 44) (om-make-point 452 358) "non documentation" 183)
;endfileheader
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "om-abs" '((om-load-boxcomment "comment" (om-make-point 150 81) '"INPUT:$self  number or list$OUTPUT:$returns  the absolute value of <self>.$" "" (om-make-point 189 29) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 156 43) '"will return$? OM->(1 5.34 65 3)$" "" (om-make-point 138 271) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 172 159) (om-make-point 92 27) (list -1 -5.34 65 3) "(-1 -5.34 65 3)" nil) (om-load-boxcall 'genfun "OM-ABS" 'om-abs '((om-load-inputfun 'input-funbox "number or tree" "SELF" 1)) (om-make-point 196 213) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 257 34) '"Calculates the absolute value of a number or a tree." "" (om-make-point 99 120) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 76 29) '"om-abs" "" (om-make-point 194 4) nil (om-make-color 0 0 0) (om-make-font "Arial" 14 :family nil :style '(:bold) :mode '(:srcor)))) '((2 0 3 0 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name 'kernel-om3))) (setf (thepict newpict) (om-get-picture 'kernel-om3)) (setf (name newpict) 'kernel-om3) (setf (pict-pos newpict) (om-make-point 3 33)) (setf (pict-size newpict) (om-make-point 98 83)) newpict)) 5.11))






































































































































































































































