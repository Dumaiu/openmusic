;fileheader
; (5.11 :patc (om-make-point 42 106) (om-make-point -1 44) (om-make-point 514 659) "non documentation" 183)
;endfileheader
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "prime-ser" '((om-load-boxcomment "comment" (om-make-point 151 98) '"INPUT:$max   number$OPTIONAL INPUT:$numelem  number$OUTPUT:$returns a  list of prime numbers$" "" (om-make-point 190 38) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 232 393) (om-make-point 21 23) 20 "20" nil) (om-load-boxcomment "comment" (om-make-point 335 52) '"returns$? OM->(1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71)$giving a list of 21 elements. $" "" (om-make-point 62 497) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcall 'genfun "PRIME-SER" 'prime-ser '((om-load-inputfun 'input-funbox "max prime" "MAX" 100) (om-load-inputfun 'input-funbox "max elements" "NUMELEM" 10)) (om-make-point 198 426) nil nil nil nil 1) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 196 394) (om-make-point 26 22) 100 "100" nil) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 215 228) (om-make-point 26 22) 100 "100" nil) (om-load-boxcall 'genfun "PRIME-SER" 'prime-ser '((om-load-inputfun 'input-funbox "max prime" "MAX" 100)) (om-make-point 200 260) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 335 52) '"returns the list$? OM->(1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97)$" "" (om-make-point 64 331) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 361 45) '"Returns the set of prime-numbers ranging from 0 up to <max>. The optional parameter <nummax> limits the maximum number of elements." "" (om-make-point 74 149) nil (om-make-color 0 0 0) (om-make-font "Arial" 10 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 104 26) '"prime-ser" "" (om-make-point 190 7) nil (om-make-color 0 0 0) (om-make-font "Arial" 14 :family nil :style '(:bold) :mode '(:srcor)))) '((4 0 3 0 nil 0) (1 0 3 1 nil 0) (5 0 6 0 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name 'kernel-om3))) (setf (thepict newpict) (om-get-picture 'kernel-om3)) (setf (name newpict) 'kernel-om3) (setf (pict-pos newpict) (om-make-point 3 33)) (setf (pict-size newpict) (om-make-point 98 83)) newpict)) 5.11))






































































































































































































































