;fileheader
; (5.11 :patc (om-make-point 161 795) (om-make-point 0 44) (om-make-point 573 348) "non documentation" 183)
;endfileheader
(in-package :om)(load-lib-for 'nil)(setf *om-current-persistent* (om-load-patch1 "select-tools" '((om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 461 105) (om-make-point 23 20) 100 "100" nil) (om-load-boxcall 'genfun "OM*" 'om* '((om-load-inputfun 'input-funbox "first input" "SELF" 0) (om-load-inputfun 'input-funbox "second input" "NUM" 100)) (om-make-point 417 124) nil nil nil nil 1) (om-load-boxcall 'genfun "CONTROL-CHANGE" 'control-change '((om-load-inputfunmenu1 'input-funmenu "control name" "CTRL" nil (list (list "00 - Bank Select" 0) (list "01 - Modulation Wheel" 1) (list "02 - Breath Controller" 2) (list "04 - Foot Controller" 4) (list "05 - Portamento Time" 5) (list "06 - Data Entry MSB" 6) (list "07 - Channel Volume" 7) (list "08 - Balance" 8) (list "10 - Pan" 10) (list "11 - Expression Controller" 11) (list "12 - Effect Control 1" 12) (list "13 - Effect Control 2" 13) (list "16 - General Purpose Controller 1" 16) (list "17 - General Purpose Controller 2" 17) (list "18 - General Purpose Controller 3" 18) (list "19 - General Purpose Controller 4" 19) (list "32 - Bank Select Fine" 0) (list "33 - Modulation Wheel  Fine" 1) (list "34 - Breath Controller Fine" 2) (list "36 - Foot Controller Fine" 4) (list "37 - Portamento Time Fine" 5) (list "38 - Data Entry LSB" 6) (list "39 - Channel Volume Fine" 7) (list "40 - Balance Fine" 8) (list "42 - Pan Fine" 10) (list "43 - Expression Controller Fine" 11) (list "44 - Effect Control 1 Fine" 12) (list "45 - Effect Control 2 Fine" 13) (list "48 - General Purpose Controller 1 Fine" 16) (list "49 - General Purpose Controller 2 Fine" 17) (list "50 - General Purpose Controller 3 Fine" 18) (list "51 - General Purpose Controller 4 Fine" 19) (list "64 - Damper Pedal" 64) (list "65 - Portamento" 65) (list "66 - Sustenuto" 66) (list "67 - Soft Pedal" 67) (list "68 - Legato Footswitch" 68) (list "69 - Hold 2" 69) (list "70 - Sound Controller 1" 70) (list "71 - Sound Controller 2" 71) (list "72 - SoundController 3" 72) (list "73 - SoundController 4" 73) (list "74 - SoundController 5" 74) (list "75 - SoundController 6" 75) (list "76 - SoundController7" 76) (list "77 - SoundController8" 77) (list "78 - SoundController9" 78) (list "79 - SoundController10" 79) (list "84 - PortamentoControl" 84) (list "91 - Effects1Depth" 91) (list "92 - Effects2Depth" 92) (list "93 - Effects3Depth" 93) (list "94 - Effects4Depth" 94) (list "95 - Effects5Depth" 95) (list "96 - DataIncrement" 96)))) (om-make-point 229 87) nil nil nil nil 1) (om-load-boxcall 'genfun "GM-DRUMNOTE" 'gm-drumnote '((om-load-inputfunmenu1 'input-funmenu "Drum name" "DRUMNAME" 37 (list (list "Acoustic Bass Drum" 35) (list "Bass Drum 1" 36) (list "Side Stick" 37) (list "Acoustic Snare" 38) (list "Hand Clap" 39) (list "Electric Snare" 40) (list "Low Floor Tom" 41) (list "Closed Hi Hat" 42) (list "High Floor Tom" 43) (list "Pedal Hi Hat" 44) (list "Low Tom" 45) (list "Open Hi Hat" 46) (list "Low Mid Tom" 47) (list "High Mid Tom" 48) (list "Crash Cymbal 1" 49) (list "High Tom" 50) (list "Ride Cymbal 1" 51) (list "Chinese Cymbal" 52) (list "Ride Bell" 53) (list "Tambourine" 54) (list "Splash Cymbal" 55) (list "Cowbell" 56) (list "Crash Cymbal 2" 57) (list "Vibraslap" 58) (list "Ride Cymbal 2" 59) (list "High Bongo" 60) (list "Low Bongo" 61) (list "Mute High Conga" 62) (list "Open High Conga" 63) (list "Low Conga" 64) (list "High Timbale" 65) (list "Low Timbale" 66) (list "High Agogo" 67) (list "Low Agogo" 68) (list "Cabasa" 69) (list "Maracas" 70) (list "Short Whistle" 71) (list "Long Whistle" 72) (list "Short Guiro" 73) (list "Long Guiro" 74) (list "Claves" 75) (list "High Wood Block" 76) (list "Low Wood Block" 77) (list "Mute Cuica" 78) (list "Open Cuica" 79) (list "Mute Triangle" 80) (list "Open Triangle" 81)))) (om-make-point 390 55) nil nil nil nil 1) (om-load-boxcall 'genfun "GM-PROGRAM" 'gm-program '((om-load-inputfunmenu1 'input-funmenu "Instrument name" "PROGNAME" 16 (list (list "0 - Acoustic Grand Piano" 0) (list "1 - Bright Acoustic Piano" 1) (list "2 - Electric Grand Piano" 2) (list "3 - Honki Tonk Piano" 3) (list "4 - Electric Piano 1" 4) (list "5 - Electric Piano 2" 5) (list "6 - Harpsichord" 6) (list "7 - Clavinet" 7) (list "8 - Celesta" 8) (list "9 - Glockenspiel" 9) (list "10 - Music Box" 10) (list "11 - Vibraphone" 11) (list "12 - Marimba" 12) (list "13 - Xylophone" 13) (list "14 - Tubular bells" 14) (list "15 - Dulcimer" 15) (list "16 - Drawbar Organ" 16) (list "17 - Percussive Organ" 17) (list "18 - Rock Organ" 18) (list "19 - Church Organ" 19) (list "20 - Reed Organ" 20) (list "21 - Accordion" 21) (list "22 - Harmonica" 22) (list "23 - Tango Accordion" 23) (list "24 - Nylon Acoustic Guitar" 24) (list "25 - Steel Acoustic Guitar" 25) (list "26 - Jazz Electric Guitar" 26) (list "27 - Clean Electric Guitar" 27) (list "28 - Muted Electric Guitar" 28) (list "29 - Overdrive Guitar" 29) (list "30 - Distorted Guitar" 30) (list "31 - Guitar Harmonics" 31) (list "32 - Acoustic Bass" 32) (list "33 - Electric Fingered Bass" 33) (list "34 - Electric Picked Bass" 34) (list "35 - Fretless Bass" 35) (list "36 - Slap Bass 1" 36) (list "37 - Slap Bass 2" 37) (list "38 - Synth Bass 1" 38) (list "39 - Synth Bass 2" 39) (list "40 - Violin" 40) (list "41 - Viola" 41) (list "42 - Cello" 42) (list "43 - Contrabass" 43) (list "44 - Tremolo Strings" 44) (list "45 - Pizzicato Strings" 45) (list "46 - Orchestral Harp" 46) (list "47 - Timpani" 47) (list "48 - String Ensemble 1" 48) (list "49 - String Ensemble 2" 49) (list "50 - Synth Strings 1" 50) (list "51 - Synth Strings 2" 51) (list "52 - Choir Aahs" 52) (list "53 - Voice Oohs" 53) (list "54 - Synth Voice" 54) (list "55 - Orchestra Hit" 55) (list "56 - Trumpet" 56) (list "57 - Trombone" 57) (list "58 - Tuba" 58) (list "59 - Muted Trumpet" 59) (list "60 - French Horn" 60) (list "61 - Brass Section" 61) (list "62 - Synth Brass 1" 62) (list "63 - Synth Brass 2" 63) (list "64 - Soprano Sax" 64) (list "65 - Alto Sax" 65) (list "66 - Tenor Sax" 66) (list "67 - Baritone Sax" 67) (list "68 - Oboe" 68) (list "69 - English Horn" 69) (list "70 - Bassoon" 70) (list "71 - Clarinet" 71) (list "72 - Piccolo" 72) (list "73 - Flute" 73) (list "74 - Recorder" 74) (list "75 - Pan Flute" 75) (list "76 - Bottle Blow" 76) (list "77 - Shakuhachi" 77) (list "78 - Whistle" 78) (list "79 - Ocarina" 79) (list "80 - Syn Square Wave" 80) (list "81 - Syn Sawtooth Wave" 81) (list "82 - Syn Calliope" 82) (list "83 - Syn Chiff" 83) (list "84 - Syn Charang" 84) (list "85 - Syn Voice" 85) (list "86 - Syn Fifths Sawtooth w-Wave" 86) (list "87 - Syn Brass and Lead" 87) (list "88 - New Age Syn Pad" 88) (list "89 - Warm Syn Pad" 89) (list "90 - Polysynth Syn Pad" 90) (list "91 - Choir Syn Pad" 91) (list "92 - Bowed Syn Pad" 92) (list "93 - Metal Syn Pad" 93) (list "94 - Halo Syn Pad" 94) (list "95 - Sweep Syn Pad" 95) (list "96 - FX Rain" 96) (list "97 - FX Soundtrack" 97) (list "98 - FX Crystal" 98) (list "99 - FX Atmosphere" 99) (list "100 - FX Brightness" 100) (list "101 - FX Goblins" 101) (list "102 - FX Echoes" 102) (list "103 - FX Sci-fi" 103) (list "104 - Sitar" 104) (list "105 - Banjo" 105) (list "106 - Shamisen" 106) (list "107 - Koto" 107) (list "108 - Kalimba" 108) (list "109 - Bag Pipe" 109) (list "110 - Fiddle" 110) (list "111 - Shanai" 111) (list "112 - Tinkle Bell" 112) (list "113 - Agogo" 113) (list "114 - Steel Drums" 114) (list "115 - Woodblock" 115) (list "116 - Taiko Drum" 116) (list "117 - Melodic Tom" 117) (list "118 - Syn Drum" 118) (list "119 - Reverse Cymbal" 119) (list "120 - Guitar Fret Noise" 120) (list "121 - Breath Noise" 121) (list "122 - Seashore" 122) (list "123 - Bird Tweet" 123) (list "124 - Telephone Ring" 124) (list "125 - Helicopter" 125) (list "126 - Applause" 126) (list "127 - Gun Shot" 127)))) (om-make-point 110 88) nil nil nil nil 1) (om-load-boxcall 'genfun "PGMOUT" 'pgmout '((om-load-inputfun 'input-funbox "program number" "PROG" 2) (om-load-inputfun 'input-funbox "channel" "CHANS" 1)) (om-make-point 150 151) nil nil nil nil 1) (om-load-boxcall 'bastype "aux2" 't 'nil (om-make-point 184 121) (om-make-point 11 20) 1 "1" nil) (om-load-boxcall 'genfun "CTRLCHG" 'ctrlchg '((om-load-inputfun 'input-funbox "control number" "CTRLNUM" 7) (om-load-inputfun 'input-funbox "value" "VAL" 100) (om-load-inputfun 'input-funbox "channel" "CHANS" 1)) (om-make-point 294 153) nil nil nil nil 1) (om-load-boxcall 'bastype "aux3" 't 'nil (om-make-point 334 123) (om-make-point 11 20) 1 "1" nil) (om-load-boxcall 'bastype "aux4" 't 'nil (om-make-point 308 106) (om-make-point 23 20) 100 "100" nil) (om-load-editor-box1 "NOTE1" 'note '((om-load-inputfun 'input-funbox "objs" "SELF" nil) (om-load-inputfun 'input-funbox "no documentation" "MIDIC" 6000) (om-load-inputfun 'input-funbox "no documentation" "VEL" 80) (om-load-inputfun 'input-funbox "no documentation" "DUR" 1000) (om-load-inputfun 'input-funbox "no documentation" "CHAN" 1)) (om-make-point 417 164) (om-make-point 61 50) (if (find-class 'note nil) (let ((newobj (make-instance 'note :midic 3700 :vel 80 :dur 1000 :chan 10 :from-file t))) (load-port-info newobj '0) (init-mus-color newobj nil) (set-extra-pairs newobj 'nil) (set-patch-pairs newobj 'nil) (set-tonalite newobj nil) newobj)) "x" nil (corrige (pairlis '(show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx) (list 't 0 0 2621450 18350450 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance 'edition-values))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) '(1)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 'g 24 2))) nil nil nil) (om-load-boxcall 'bastype "aux5" 't 'nil (om-make-point 460 144) (om-make-point 18 20) 10 "10" nil) (om-load-boxcomment "comment" (om-make-point 36 25) '"- 1 -" "" (om-make-point 153 222) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family nil :style 'nil :mode 'nil)) (om-load-boxcomment "comment" (om-make-point 36 25) '"- 2 -" "" (om-make-point 300 221) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family nil :style 'nil :mode 'nil)) (om-load-boxcomment "comment" (om-make-point 36 25) '"- 3 -" "" (om-make-point 430 222) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family nil :style 'nil :mode 'nil)) (om-load-boxcomment "comment12" (om-make-point 136 35) '"Using MIDI events" "" (om-make-point 248 7) nil (om-make-color 0 0 0) (om-make-font "Geneva" 14 :family nil :style 'nil :mode 'nil))) '((3 0 1 0 nil 0) (0 0 1 1 nil 0) (4 0 5 0 nil 0) (6 0 5 1 nil 0) (2 0 7 0 nil 0) (9 0 7 1 nil 0) (8 0 7 2 nil 0) (1 0 10 1 nil 0) (11 0 10 4 nil 0)) (list (let ((newpict (make-instance 'patch-picture :name 'kernel-om3))) (setf (thepict newpict) (om-get-picture 'kernel-om3)) (setf (name newpict) 'kernel-om3) (setf (pict-pos newpict) (om-make-point 3 33)) (setf (pict-size newpict) (om-make-point 98 83)) newpict)) 5.11))







































































































































