; OM File Header - Saved 2009/10/22 17:10:47
; (6.010003 :patc (om-make-point 338 116) (om-make-point 447 107) (om-make-point 665 719) "non documentation" 183 0 nil "2009/10/22 17:10:47")
; End File Header
; External resources 
; (list (list (quote :sound) "../../in-files/SOUND2.WAV"))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "08-sound-processing" (quote ((om-load-boxcomment "comment" (om-make-point 223 28) (quote "Sound Processing patches") "" (om-make-point 141 30) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-editor-box1 "SOUND1" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 154 574) (om-make-point 225 61) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (player show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx scale)) (list (quote :midishare) (quote t) 1 0 (om-make-point 40 10) (om-make-point 370 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 nil)) t nil nil nil) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 306 405) (om-make-point 73 31) "mixall.aiff" "\"mixall.aiff\"" nil) (om-load-boxcall (quote genfun) "OUTFILE" (quote outfile) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "PATH" nil))) (om-make-point 304 443) nil nil nil nil 1) (om-load-boxcall (quote genfun) "SAVE-SOUND" (quote save-sound) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "FILENAME" nil))) (om-make-point 247 510) nil nil nil nil 1) (om-load-boxcall (quote genfun) "SOUND-MIX" (quote sound-mix) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "S1" nil) (om-load-inputfun (quote input-funbox) "no documentation" "S2" nil))) (om-make-point 148 426) nil nil nil nil 1) (om-load-boxcall (quote genfun) "SOUND-SEQ" (quote sound-seq) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "S1" nil) (om-load-inputfun (quote input-funbox) "no documentation" "S2" nil))) (om-make-point 230 366) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 213 249) (om-make-point 33 24) 1000 "1000" nil) (om-load-boxcall (quote genfun) "SOUND-SILENCE" (quote sound-silence) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "DUR" 1))) (om-make-point 193 277) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 334 222) (om-make-point 30 36) 5 "5" nil) (om-load-boxcall (quote genfun) "SOUND-LOOP" (quote sound-loop) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "S" nil) (om-load-inputfun (quote input-funbox) "no documentation" "N" nil))) (om-make-point 295 267) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 299 179) (om-make-point 38 23) 1000 "1000" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 274 179) (om-make-point 21 27) 0 "0" nil) (om-load-boxcall (quote genfun) "SOUND-CUT" (quote sound-cut) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "S" nil) (om-load-inputfun (quote input-funbox) "no documentation" "BEG" 0.0) (om-load-inputfun (quote input-funbox) "no documentation" "END" 1.0))) (om-make-point 252 209) nil nil nil nil 1) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 154 94) (om-make-point 128 67) (let ((newobj (let ((thesound (load-sound (make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "SOUND2" :type "WAV") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (player approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems scale)) (list (quote :midishare) 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 (om-make-point 370 280) (om-make-point 40 10) 0 1 (quote t) nil)) t nil nil nil))) (quote ((4 0 1 0 nil 0) (2 0 3 0 nil 0) (5 0 4 0 nil 0) (3 0 4 1 nil 0) (14 0 5 0 nil 0) (6 0 5 1 nil 0) (8 0 6 0 nil 0) (10 0 6 1 nil 0) (7 0 8 0 nil 0) (13 0 10 0 nil 0) (9 0 10 1 nil 0) (14 0 13 0 nil 0) (12 0 13 1 nil 0) (11 0 13 2 nil 0))) nil 6.010003))
