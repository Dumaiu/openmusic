; OM File Header - Saved 2009/10/22 17:11:45
; (6.010003 :patc (om-make-point 340 51) (om-make-point 717 392) (om-make-point 615 413) "non documentation" 183 0 nil "2009/10/22 17:10:47")
; End File Header
; External resources 
; (list (list (quote :sound) "../../in-files/pulse1b.aiff"))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "04-sound-samples" (quote ((om-load-boxcomment "comment" (om-make-point 57 27) (quote "BPF") "" (om-make-point 376 278) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "no documentation" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "no documentation" "DECIMALS" 3))) (om-make-point 178 271) (om-make-point 195 81) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0 110.0 120.0 130.0 140.0 150.0 160.0 170.0 180.0 190.0 200.0 210.0 220.0 230.0 240.0 250.0 260.0 270.0 280.0 290.0 300.0 310.0 320.0 330.0 340.0 350.0 360.0 370.0 380.0 390.0 400.0 410.0 420.0 430.0 440.0 450.0 460.0 470.0 480.0 490.0 500.0 510.0 520.0 530.0 540.0 550.0 560.0 570.0 580.0 590.0 600.0 610.0 620.0 630.0 640.0 650.0 660.0 670.0 680.0 690.0 700.0 710.0 720.0 730.0 740.0 750.0 760.0 770.0 780.0 790.0 800.0 810.0 820.0 830.0 840.0 850.0 860.0 870.0 880.0 890.0 900.0 910.0 920.0 930.0 940.0 950.0 960.0 970.0 980.0 990.0 1000.0 1010.0 1020.0 1030.0 1040.0 1050.0 1060.0 1070.0 1080.0 1090.0 1100.0 1110.0 1120.0 1130.0 1140.0 1150.0 1160.0 1170.0 1180.0 1190.0 1200.0 1210.0 1220.0 1230.0 1240.0 1250.0 1260.0 1270.0 1280.0 1290.0 1300.0 1310.0 1320.0 1330.0 1340.0 1350.0 1360.0 1370.0 1380.0 1390.0 1400.0 1410.0 1420.0 1430.0 1440.0 1450.0 1460.0 1470.0 1480.0 1490.0 1500.0)) (quote (0.0 0.0 28.0 -12.0 -23.0 -10.0 -12.0 -53.0 14.0 -5.0 14.0 -14.0 -6.0 5.0 -9.0 -13.0 7.0 -3.0 -8.0 -26.0 -6.0 44.0 -2.0 -14.0 -26.0 7.0 -2.0 -24.0 2.0 12.0 25.0 -10.0 -12.0 29.0 -5.0 9.0 21.0 12.0 59.0 -2.0 -12.0 44.0 -17.0 4.0 42.0 14.0 14.0 28.0 -12.0 4.0 -25.0 7.0 11.0 9.0 11.0 56.0 -11.0 3.0 7.0 18.0 1.0 -29.0 2.0 10.0 19.0 -6.0 12.0 12.0 -5.0 -50.0 -22.0 5.0 57.0 -21.0 14.0 -37.0 -17.0 -11.0 -32.0 -9.0 9.0 -7.0 10.0 -13.0 -9.0 -3.0 27.0 -23.0 2.0 52.0 -7.0 -10.0 44.0 15.0 12.0 10.0 -12.0 13.0 -34.0 2.0 9.0 17.0 12.0 63.0 -15.0 5.0 7.0 20.0 2.0 -38.0 -2.0 9.0 32.0 -11.0 13.0 -4.0 -10.0 -9.0 -28.0 -4.0 36.0 -14.0 12.0 -54.0 -11.0 0.0 14.0 -16.0 -5.0 36.0 -5.0 -1.0 31.0 12.0 12.0 13.0 -13.0 14.0 -20.0 11.0 6.0 2.0 4.0 33.0 0.0 -11.0 6.0 0.0 -3.0 1.0 0.0)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (picture mode grillestep notechancolor? cmnpref zoom inport outport deltapict winsize winpos palette-mode obj-mode show-stems)) (list nil 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 1 0 0 (om-make-point 0 0) (om-make-point 370 280) (om-make-point 40 10) 0 0 (quote t))) t nil nil nil) (om-load-boxcomment "comment" (om-make-point 145 25) (quote "<-- Number of points") "" (om-make-point 313 164) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 272 171) (om-make-point 32 25) 150 "150" nil) (om-load-boxcall (quote genfun) "SOUND-POINTS" (quote sound-points) (quote ((om-load-inputfun (quote input-funbox) "sound file" "SELF" nil) (om-load-inputfun (quote input-funbox) "num of points" "NUM" 1000))) (om-make-point 230 201) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 57 27) (quote "SOUND") "" (om-make-point 143 93) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 141 42) (quote "Downsample the waveform") "" (om-make-point 299 9) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 131 34) (quote "Sound Samples") "" (om-make-point 160 12) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "no documentation" "MARKERS" nil))) (om-make-point 216 90) (om-make-point 88 63) (let ((newobj (let ((thesound (load-sound (make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "pulse1b" :type "aiff") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (player show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx palette-mode scale)) (list (quote :midishare) (quote t) 1 0 (om-make-point 40 10) (om-make-point 370 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 0 nil)) t nil nil nil))) (quote ((4 0 1 2 nil 0) (8 0 4 0 nil 0) (3 0 4 1 nil 0))) nil 6.010003))
