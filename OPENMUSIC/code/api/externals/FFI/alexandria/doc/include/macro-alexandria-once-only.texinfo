@anchor{Macro once-only}
@deffn {Macro} {once-only} specs @&body forms
@findex once-only
Evaluates @code{forms} with symbols specified in @code{specs} rebound to temporary
variables, ensuring that each initform is evaluated only once.

Each of @code{specs} must either be a symbol naming the variable to be rebound, or of
the form:

@lisp
  (symbol initform)
@end lisp

Bare symbols in @code{specs} are equivalent to

@lisp
  (symbol symbol)
@end lisp

Example:

@lisp
  (defmacro cons1 (x) (once-only (x) `(cons ,x ,x)))
  (let ((y 0)) (cons1 (incf y))) => (1 . 1)
@end lisp
@end deffn
