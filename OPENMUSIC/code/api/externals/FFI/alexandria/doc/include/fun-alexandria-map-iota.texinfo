@anchor{Function map-iota}
@deffn {Function} {map-iota} function n @&key start step
@findex map-iota
Calls @code{function} with @code{n} numbers, starting from @code{start} (with numeric contagion
from @code{step} applied), each consequtive number being the sum of the previous one
and @code{step}. @code{start} defaults to @code{0} and @code{step} to @code{1}. Returns @code{n}.

Examples:

@lisp
  (map-iota #'print 3 :start 1 :step 1.0) => 3
    ;;; 1.0
    ;;; 2.0
    ;;; 3.0
@end lisp
@end deffn
