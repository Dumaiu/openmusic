@anchor{Function rotate}
@deffn {Function} {rotate} sequence @&optional n
@findex rotate
Returns a sequence of the same type as @code{sequence}, with the elements of
@code{sequence} rotated by @code{n:} @code{n} elements are moved from the end of the sequence to
the front if @code{n} is positive, and @code{-n} elements moved from the front to the end if
@code{n} is negative. @code{sequence} must be a proper sequence. @code{n} must be an integer,
defaulting to @code{1}.

If absolute value of @code{n} is greater then the length of the sequence, the results
are identical to calling @code{rotate} with

@lisp
  (* (signum n) (mod n (length sequence))).
@end lisp

Note: the original sequence may be destructively altered, and result sequence may
share structure with it.
@end deffn
