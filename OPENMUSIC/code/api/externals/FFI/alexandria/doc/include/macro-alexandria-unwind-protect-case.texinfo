@anchor{Macro unwind-protect-case}
@deffn {Macro} {unwind-protect-case} (&optional abort-flag) protected-form @&body clauses
@findex unwind-protect-case
Like @code{cl:unwind-protect}, but you can specify the circumstances that
the cleanup @code{clauses} are run.

  clauses ::= (:NORMAL form*)* | (:ABORT form*)* | (:ALWAYS form*)*

Clauses can be given in any order, and more than one clause can be
given for each circumstance. The clauses whose denoted circumstance
occured, are executed in the order the clauses appear.

@code{abort-flag} is the name of a variable that will be bound to @code{t} in
@code{clauses} if the @code{protected-form} aborted preemptively, and to @code{nil}
otherwise.

Examples:

@lisp
  (unwind-protect-case ()
       (protected-form)
     (:normal (format t "This is only evaluated if PROTECTED-FORM executed normally.~%"))
     (:abort  (format t "This is only evaluated if PROTECTED-FORM aborted preemptively.~%"))
     (:always (format t "This is evaluated in either case.~%")))
@end lisp

@lisp
  (unwind-protect-case (aborted-p)
       (protected-form)
     (:always (perform-cleanup-if aborted-p)))
@end lisp
@end deffn
